print ""
print("credo")
raw_input
raw_input()
input()
10
10/20
10//20
print
help(pritn)
help(print)
pprint
import pprint
dir(pprint)
help(print)
print "1"
print("1", "2", "3")
print("1", "2", "3", sep=",")
print("1", "2", "3", sep="|")
a = [1,2,3,4,5]
"".join
"".join(a)
"".join(a)a
a
"".join(a)
"".join([i for i in a])
"".join([str(i) for i in a])
s = [str(i) for i in a]
s
a
"".join(a)
"".join(s)
"|".join(s)
",".join(s)
a = [
1
,
2,
3
,
4
]
s = "a
s = "a \
end"
s
s = """a 
how are you"""
s
v = 1
v=1
v = 1
V
raw_input
a = input("Enter your key:")
y
a == 'Y'
a == 'y'
a.lower() == 'y'
a = input("Enter your key:")
Y
a
a.lower() == 'y'
10/2
1/2
1//2
print("1")
print ("1")
print "1"
a = 10
A
B = 20
b
print = 1
if = 1
If = 1
printt()
print()
print(1)
a = 10
a = 10;
a = 10;b=9
a = 10
l = [
1,
2,
3
]
l
a = 100
a
a == 200
c == 200
a == 200
a == 100
a > 50
a < 50
a == None
None == ''
None == 
None == 0
class = 1
False = 1
True = 1
None = 1
import readline;readline.write_history_file('/home/mohideen/Desktop/pyScript/eg6.txt')
exit()
def f() -> str:
   return "ok"
f()
def f() -> str:
   return 1
f()
type(f())
items = {"A": 1, "B": 2, "C": 3}
u_items = {"D": 4, "B": 4, "E": 8, "C": 4}
items.update((k + '_1' if k in items else k, v) for k, v in u_items.items())
items
n_items = {"C":7, "B":9}
items.update((k + '_1' if k in items else k, v) for k, v in n_items.items())
items
items.update((k + '_1' if k in items else k, v) for k, v in u_items.items())
items
items.update((k + '_1' if k in items else k, v) for k, v in u_items.items())
items
items = {"A": 1, "B": 2, "C": 3}
u_items = {"D": 4, "B": 4, "E": 8, "C": 4}
items.update((k + '_1' if k in items else k, v) for k, v in u_items.items())
items
n_items = {"C":7, "B":9}
for k, v in n_items.items():
   print k
for k, v in n_items.items():
   print(k)
for k, v in n_items.items():
   print(k)
for k, v in n_items.items():
   k in items
for k, v in n_items.items():
   [i for i in items if k in i]
for k, v in n_items.items():
   max[i for i in items if k in i]
for k, v in n_items.items():
   max(i for i in items if k in i)
1items.update(max(_k for _k in items if k in _k), v) for k, v in u_items.items())
for k, v in n_items.items():
   max(i for i in items)
for k, v in n_items.items():
   max(i for i in items)
for k, v in n_items.items():
   print(k)]
for k, v in n_items.items():
   print(k)
for k, v in n_items.items():
   max(k for k in items)
for k, v in n_items.items():
   max(k for i in items)
n_items
items
for k, v in n_items.items():
   max(i for i in items if k in i)
[ max(i for i in items if k in i) for k,v in n_items.items()]
1items.update(max(_k for _k in items if k in _k), v) for k, v in u_items.items())
[ max(i for i in items if k in i) for k,v in u_items.items()]
items = {"A": 1, "B": 2, "C": 3}
u_items = {"D": 4, "B": 4, "E": 8, "C": 4}
[ max(i for i in items if k in i) for k,v in u_items.items()]
[ max(i for i in items if k in i.keys()) for k,v in u_items.items()]
[k for k,v in u_items.items()]
[k for k,v in u_items.items() if k in items]
[k for k,v in u_items.items() if k in items else 0]
[k for k,v in u_items.items()]
[items.keys().index(k) for k,v in u_items.items()]
[items.keys() for k,v in u_items.items()]
[dir(items.keys()) for k,v in u_items.items()]
[k for k,v in u_items.items()]
[k in items for k,v in u_items.items()]
items1 = {"A": 1, "B_1": 2, "C": 3}
[k in items1 for k,v in u_items.items()]
[k for k,v in u_items.items()]
items.update((k + '_1' if k in items else k, v) for k, v in n_items.items())
items
items = {"A": 1, "B": 2, "C": 3}
items.update((k + '_1' if k in items else k, v) for k, v in u_items.items())
items
n_items = {"C":7, "B":9}
(k + '_1' if k in items else k, v) for k, v in n_items.items()
k + '_1' if k in items else k, v) for k, v in n_items.items()
(k + '_1' if k in items else k, v) for k, v in n_items.items())
((k + '_1' if k in items else k, v) for k, v in n_items.items())
[(k + '_1' if k in items else k, v) for k, v in n_items.items()]
items
for k,v in n_items.items():
    print (k)
[(k + '_1' if k in items else k, v) for k, v in n_items.items()]
[(i for k in items) for k, v in n_items.items()]
[max(i for k in items) for k, v in n_items.items()]
[max(i for i in items if k in i) for k, v in n_items.items()]
items
n_items = {"C":7, "B":9, 'D': 5}
[max(i for i in items if k in i) for k, v in n_items.items()]
n_items = {"C":7, "B":9, 'D': 5, 'X':1}
[max(i for i in items if k in i) for k, v in n_items.items()]
[max(i if k in i else 0 for i in items) for k, v in n_items.items()]
[max(i if k in i else '' for i in items) for k, v in n_items.items()]
[max(i if k in i else '' for i in items), v for k, v in n_items.items()]
[(max(i if k in i else '' for i in items), v) for k, v in n_items.items()]
[(max(i if k in i else '' for i in items) + '_1', v) for k, v in n_items.items()]
[(max(i if k in i for i in items), v) for k, v in n_items.items()]
[(max(i if k in i else None for i in items), v) for k, v in n_items.items()]
[max(i for i in items if k in i) for k, v in n_items.items()]
[k if k in i else None for k, v in n_items.items()]
[k if k in items else None for k, v in n_items.items()]
for k, v in n_items.items():
  print (k)
for k, v in n_items.items():
  if k in items:
    print (k)
for k, v in n_items.items():
  if k in items:
    print (max(i for i in items if k in i))
for k, v in n_items.items():
  _k = (k, v)
  if k in items:
     _k = (max(i for i in items if k in i)+'_1', v)
  items.update(_k)
for k, v in n_items.items():
  _k = (k, v)
  if k in items:
     _k = (max(i for i in items if k in i)+'_1', v)
  print (_k)
for k, v in n_items.items():
  _k = (k, v)
for k, v in n_items.items():
  _k = {k: v}
  if k in items:
     _k = {max(i for i in items if k in i)+'_1': v}
  print (_k)
for k, v in n_items.items():
  _k = {k: v}
  if k in items:
     _k = {max(i for i in items if k in i)+'_1': v}
  items.update(_k)
items
help([].insert)
help(''.center)
''.center(width=1)
l = range(100)
l
[i for i in l]
list(l)
[i for i in l]
[i for i in l if i]
[i for i in l if i % 2]
[i for i in l if i % 2 == 0]
[i for i in l if not i % 2]
['apple', 'orange', 'mango', 'banana', 'pineapple']
[n for n in ['apple', 'orange', 'mango', 'banana', 'pineapple']]
[n for n in ['apple', 'orange', 'mango', 'banana', 'pineapple'] if 'n' in n]
[n for n in ['apple', 'orange', 'mango', 'banana', 'pineapple', 'Adam', 'Ambassador', 'age'] if n.count('n') > 0]
[n for n in ['apple', 'orange', 'mango', 'banana', 'pineapple', 'Adam', 'Ambassador', 'age'] if n[0] == 'a']
[n for n in ['apple', 'orange', 'mango', 'banana', 'pineapple', 'Adam', 'Ambassador', 'age'] if n[0].lower() == 'a']
[n for n in ['apple', 'orange', 'mango', 'banana', 'pineapple', 'Adam', 'Ambassador', 'age'] if n.startswith('a')]
[n for n in ['apple', 'orange', 'mango', 'banana', 'pineapple', 'Adam', 'Ambassador', 'age'] if n.lower().startswith('a')]
(n for n in ['apple', 'orange', 'mango', 'banana', 'pineapple', 'Adam', 'Ambassador', 'age'] if n.lower().startswith('a'))
range(0, 100)
>>> [i for i in l]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]
>>> list(l)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,{}c
f = {i for i in {'apple': 2, 'orange': 3, 'banana': 5}}
d = {'apple': 2, 'orange': 3, 'banana': 5}
f = {i for i in d}
f
type(f)
f = {i for i in {'apple': 2, 'orange': 3, 'banana': 5}}
f
f = {d[i] for i in d}
f
f = {i:d[i] for i in d}
f
f = {d[i]:i for i in d}
f
d.items()
k = d.keys()
v = d.values()
dict(zip(v,k))
dict(zip(d.values(),d.keys()))
{d[i]:i for i in d}
f = {i:j for i,j in d.items()}
f
{i:d[i] for i in d}
{i:d[i] for i in d if d[i] < 5}
{i for i in {1,2,3}}
set([i for i in [1,2,3]])
{i for i in {1,2,3,1,2,3}}
[i for i in {1,2,3,1,2,3}]
[i for i in [1,2,3,1,2,3]]
{i for i in {1,2,3} if i < 3}
import readline
readline.write_history_file('/home/mohideen/Desktop/pyDocs/pyModules/aug20/comprehension.txt')
